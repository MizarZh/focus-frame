name: Build and Release PyInstaller Executables

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      # Step 1: Check out the repository
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9 # Adjust Python version as needed

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      # Step 4: Extract version from tag
      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      # Step 5: Build the executable with PyInstaller
      - name: Build executable
        run: |
          pyinstaller --onefile --windowed --name focus-frame src/main.py
        env:
          # Necessary for macOS and Linux builds to specify windowed mode
          DISPLAY: ':99.0'

      # Step 6: Rename and archive the output for each platform
      - name: Rename and Archive Output
        run: |
          mkdir -p build-output
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            mv dist/focus-frame build-output/focus-frame-linux-${{ env.VERSION }}
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            mv dist/focus-frame build-output/focus-frame-macos-${{ env.VERSION }}
          fi
        shell: bash
        if: ${{ matrix.os != 'windows-latest' }}

      - name: Rename and Archive Output (Windows)
        run: |
          New-Item -Path build-output -ItemType Directory -Force
          Move-Item -Path dist\focus-frame.exe -Destination build-output\focus-frame-windows-${{ env.VERSION }}.exe
        shell: powershell
        if: ${{ matrix.os == 'windows-latest' }}

      # Step 7: Upload artifacts to GitHub Actions for later steps
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: build-output/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-output

      - name: Set up GitHub CLI
        uses: actions/setup-gh@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: |
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "Automatically generated release from GitHub Actions." \
            release-output/build-output/focus-frame-windows-${{ github.ref_name }}.exe \
            release-output/build-output/focus-frame-macos-${{ github.ref_name }} \
            release-output/build-output/focus-frame-linux-${{ github.ref_name }}
